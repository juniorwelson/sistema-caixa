{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  id: \"formu\"\n};\nconst _hoisted_3 = {\n  id: \"total\"\n};\nconst _hoisted_4 = {\n  id: \"tabela\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"section\", _hoisted_1, [_createElementVNode(\"section\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"label\", {\n    for: \"senha\"\n  }, \"DIGITE A SENHA DE ADM\", -1 /* HOISTED */)), _cache[2] || (_cache[2] = _createElementVNode(\"input\", {\n    type: \"passoword\",\n    id: \"senha\",\n    name: \"senha\"\n  }, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"btn btn-success\",\n    id: \"btn\",\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.finalizarVenda && _ctx.finalizarVenda(...args))\n  }, \"FINALIZAR VENDA\")]), _createElementVNode(\"div\", _hoisted_3, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", null, \"TOTAL DE VENDAS\", -1 /* HOISTED */)), _createElementVNode(\"p\", null, _toDisplayString($options.formatarNumero($data.totalV)), 1 /* TEXT */)]), _cache[5] || (_cache[5] = _createElementVNode(\"hr\", null, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"ID\"), _createElementVNode(\"th\", null, \"DESCRIÇÃO\"), _createElementVNode(\"th\", null, \"VALOR\"), _createElementVNode(\"th\", null, \"F/PAGAMENTO\"), _createElementVNode(\"th\", null, \"DATA\"), _createElementVNode(\"th\", null, \"AÇÃO\")])], -1 /* HOISTED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.vendas, venda => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: venda.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(venda.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(venda.descricao), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatarNumero(venda.valorVenda)), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(venda.formaPagamento), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString($options.formatarDataHora(venda.datavenda)), 1 /* TEXT */), _createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      class: \"btn btn-danger btn-block\",\n      onClick: $event => $options.deletarVenda(venda.id)\n    }, \"EXCLUIR\", 8 /* PROPS */, _hoisted_5)])]);\n  }), 128 /* KEYED_FRAGMENT */))])])])]);\n}","map":{"version":3,"names":["class","id","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","for","type","name","onClick","_cache","args","_ctx","finalizarVenda","_hoisted_3","_toDisplayString","$options","formatarNumero","$data","totalV","_hoisted_4","_Fragment","_renderList","vendas","venda","key","descricao","valorVenda","formaPagamento","formatarDataHora","datavenda","$event","deletarVenda","_hoisted_5"],"sources":["C:\\Users\\eujun\\Desktop\\Sistema de Caixa\\front-caixa\\src\\components\\resumo.vue"],"sourcesContent":["<template>\r\n\r\n    <section class=\"container\">\r\n\r\n      <section id=\"formu\">\r\n        <label for=\"senha\">DIGITE A SENHA DE ADM</label>\r\n        <input type=\"passoword\" id=\"senha\" name=\"senha\">\r\n        <button  type=\"button\" class=\"btn btn-success\" id=\"btn\" @click=\"finalizarVenda\">FINALIZAR VENDA</button>\r\n      </section>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div id=\"total\">\r\n        <h2>TOTAL DE VENDAS</h2>\r\n        \r\n        <p >{{ formatarNumero(totalV) }} </p>\r\n      </div> \r\n    \r\n    \r\n      <hr>\r\n      <div id=\"tabela\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DESCRIÇÃO</th>\r\n              <th>VALOR</th>\r\n              <th>F/PAGAMENTO</th>\r\n              <th>DATA</th>\r\n              <th>AÇÃO</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"venda in vendas\" :key=\"venda.id\">\r\n              <td>{{ venda.id }}</td>\r\n              <td>{{ venda.descricao }}</td>\r\n              <td>{{ formatarNumero(venda.valorVenda) }}</td>\r\n              <td>{{ venda.formaPagamento }}</td>\r\n              <td>{{ formatarDataHora(venda.datavenda) }}</td>\r\n\r\n              <td>\r\n                <button class=\"btn btn-danger btn-block\" @click=\"deletarVenda(venda.id)\">EXCLUIR</button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </section>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Resumo',\r\n    data() {\r\n      return {\r\n        vendas: [],\r\n        totalV: 0\r\n      };\r\n    },\r\n    methods: {\r\n      async carregarVendas() {\r\n        try {\r\n          const res = await fetch('http://localhost:3000/vendas');\r\n          const data = await res.json();\r\n          this.vendas = data;\r\n        } catch (error) {\r\n          alert('Erro ao carregar vendas: ' + error.message);\r\n        }\r\n      },\r\n      formatarNumero(valor) {\r\n        return Number(valor).toLocaleString('pt-BR', {\r\n          style: 'currency',\r\n          currency: 'BRL'\r\n        });\r\n        },\r\n        formatarDataHora(dataString) {\r\n  const data = new Date(dataString);\r\n  return data.toLocaleString('pt-BR', {\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit'\r\n  });\r\n  \r\n      },\r\n      async deletarVenda(id) {\r\n  try {\r\n    await fetch(`http://localhost:3000/deletarVenda/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    alert('Venda deletada com sucesso!');\r\n    this.carregarVendas(); // Atualiza a lista\r\n    this.total()\r\n  } catch (error) {\r\n    alert('Erro ao deletar venda: ' + error.message);\r\n        }\r\n  \r\n      },\r\n\r\n      async total() {\r\n        try {\r\n    const resposta = await fetch('http://localhost:3000/totalVendas', {\r\n        method: 'GET'\r\n    });\r\n\r\n    const dados = await resposta.json();\r\n          this.totalV = dados.totalVendas; // <-- Aqui você recebe o valor do backend e atualiza a variável\r\n   \r\n} catch (error) {\r\n    console.log(error);\r\n    alert('Erro ao buscar o total de vendas');\r\n}\r\n\r\n      }\r\n\r\n\r\n    },\r\n    mounted() {\r\n      this.carregarVendas();\r\n      this.total();\r\n      \r\n    }\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n.container{\r\n    margin-top: 15%;\r\n    font-family: 'Inter',sans-serif;\r\n}\r\nimg{\r\n    position: fixed;\r\n    top: 20%;\r\n    width: 500px;\r\n    height: 600px;\r\n}\r\n\r\ntable{\r\n    width:800px;\r\n    border:2px solid black;\r\n    background-color: aqua;\r\n    \r\n}\r\n\r\ntr,td,th{\r\n    border: 2px solid black;\r\n    padding-left: 10px;\r\n    text-align: center;\r\n}\r\n\r\ntd{\r\n    color: rgb(255, 255, 255);\r\n    font-weight: bold;\r\n    font-size: 1.5em;\r\n}\r\nth{\r\n\r\n    font-size: 2em;\r\n}\r\n\r\n#btn{\r\n  margin-bottom: 5px;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n}\r\np{\r\n  color: red;\r\n  font-size: 2em;\r\n  font-weight: bold;\r\n}\r\n\r\n#total{\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  padding: 0;\r\n  background-color: aqua;\r\n  width: 700px;\r\n}\r\n#formu{\r\n  margin-bottom:10% ;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: aqua;\r\n  width: 500px;\r\n  border-radius: 5%;\r\n  padding: 10px;\r\n  margin-left: 35%;\r\n}\r\nlabel{\r\n  color: white;\r\n  font-weight: bold;\r\ntext-decoration: underline;\r\npadding-bottom: 10px;\r\nfont-size: 2em;\r\n}\r\ninput{\r\n  color: red;\r\n  border: none;\r\n}\r\n\r\n</style>"],"mappings":";;EAEaA,KAAK,EAAC;AAAW;;EAEfC,EAAE,EAAC;AAAO;;EAWdA,EAAE,EAAC;AAAO;;EAQVA,EAAE,EAAC;AAAQ;mBAvBtB;;uBAEIC,mBAAA,CAgDU,WAhDVC,UAgDU,GA9CRC,mBAAA,CAIU,WAJVC,UAIU,G,0BAHRD,mBAAA,CAAgD;IAAzCE,GAAG,EAAC;EAAO,GAAC,uBAAqB,sB,0BACxCF,mBAAA,CAAgD;IAAzCG,IAAI,EAAC,WAAW;IAACN,EAAE,EAAC,OAAO;IAACO,IAAI,EAAC;+BACxCJ,mBAAA,CAAwG;IAA/FG,IAAI,EAAC,QAAQ;IAACP,KAAK,EAAC,iBAAiB;IAACC,EAAE,EAAC,KAAK;IAAEQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,cAAA,IAAAD,IAAA,CAAAC,cAAA,IAAAF,IAAA,CAAc;KAAE,iBAAe,E,GAQjGP,mBAAA,CAIM,OAJNU,UAIM,G,0BAHJV,mBAAA,CAAwB,YAApB,iBAAe,sBAEnBA,mBAAA,CAAqC,WAAAW,gBAAA,CAA9BC,QAAA,CAAAC,cAAc,CAACC,KAAA,CAAAC,MAAM,kB,6BAI9Bf,mBAAA,CAAI,sCACJA,mBAAA,CA0BM,OA1BNgB,UA0BM,GAzBJhB,mBAAA,CAwBQ,gB,0BAvBNA,mBAAA,CASQ,gBARNA,mBAAA,CAOK,aANHA,mBAAA,CAAW,YAAP,IAAE,GACNA,mBAAA,CAAkB,YAAd,WAAS,GACbA,mBAAA,CAAc,YAAV,OAAK,GACTA,mBAAA,CAAoB,YAAhB,aAAW,GACfA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAAa,YAAT,MAAI,E,wBAGZA,mBAAA,CAYQ,iB,kBAXNF,mBAAA,CAUKmB,SAAA,QA9CjBC,WAAA,CAoCgCJ,KAAA,CAAAK,MAAM,EAAfC,KAAK;yBAAhBtB,mBAAA,CAUK;MAVwBuB,GAAG,EAAED,KAAK,CAACvB;QACtCG,mBAAA,CAAuB,YAAAW,gBAAA,CAAhBS,KAAK,CAACvB,EAAE,kBACfG,mBAAA,CAA8B,YAAAW,gBAAA,CAAvBS,KAAK,CAACE,SAAS,kBACtBtB,mBAAA,CAA+C,YAAAW,gBAAA,CAAxCC,QAAA,CAAAC,cAAc,CAACO,KAAK,CAACG,UAAU,mBACtCvB,mBAAA,CAAmC,YAAAW,gBAAA,CAA5BS,KAAK,CAACI,cAAc,kBAC3BxB,mBAAA,CAAgD,YAAAW,gBAAA,CAAzCC,QAAA,CAAAa,gBAAgB,CAACL,KAAK,CAACM,SAAS,mBAEvC1B,mBAAA,CAEK,aADHA,mBAAA,CAAyF;MAAjFJ,KAAK,EAAC,0BAA0B;MAAES,OAAK,EAAAsB,MAAA,IAAEf,QAAA,CAAAgB,YAAY,CAACR,KAAK,CAACvB,EAAE;OAAG,SAAO,iBA5ChGgC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}