{"ast":null,"code":"export default {\n  name: 'Resumo',\n  data() {\n    return {\n      vendas: []\n    };\n  },\n  methods: {\n    async carregarVendas() {\n      try {\n        const res = await fetch('http://localhost:3000/vendas');\n        const data = await res.json();\n        this.vendas = data;\n      } catch (error) {\n        alert('Erro ao carregar vendas: ' + error.message);\n      }\n    },\n    formatarNumero(valor) {\n      return Number(valor).toLocaleString('pt-BR', {\n        style: 'currency',\n        currency: 'BRL'\n      });\n    },\n    formatarDataHora(dataString) {\n      const data = new Date(dataString);\n      return data.toLocaleString('pt-BR', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n    },\n    async deletarVenda(id) {\n      try {\n        await fetch(`http://localhost:3000/deletarVenda/${id}`, {\n          method: 'DELETE'\n        });\n        alert('Venda deletada com sucesso!');\n        this.carregarVendas(); // Atualiza a lista\n      } catch (error) {\n        alert('Erro ao deletar venda: ' + error.message);\n      }\n    }\n  },\n  mounted() {\n    this.carregarVendas();\n    this.formatarDataHora();\n    this.deletarVenda;\n  }\n};","map":{"version":3,"names":["name","data","vendas","methods","carregarVendas","res","fetch","json","error","alert","message","formatarNumero","valor","Number","toLocaleString","style","currency","formatarDataHora","dataString","Date","day","month","year","hour","minute","second","deletarVenda","id","method","mounted"],"sources":["C:\\Users\\eujun\\Desktop\\Sistema de Caixa\\front-caixa\\src\\components\\resumo.vue"],"sourcesContent":["<template>\r\n    <section class=\"container\">\r\n    \r\n      <div id=\"tabela\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DESCRIÇÃO</th>\r\n              <th>VALOR</th>\r\n              <th>F/PAGAMENTO</th>\r\n              <th>DATA</th>\r\n              <th>AÇÃO</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"venda in vendas\" :key=\"venda.id\">\r\n              <td>{{ venda.id }}</td>\r\n              <td>{{ venda.descricao }}</td>\r\n              <td>{{ formatarNumero(venda.valorVenda) }}</td>\r\n              <td>{{ venda.formaPagamento }}</td>\r\n              <td>{{ formatarDataHora(venda.datavenda) }}</td>\r\n\r\n              <td>\r\n                <button class=\"btn btn-danger btn-block\" @click=\"deletarvenda(venda.id)\">\r\n                  EXCLUIR\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </section>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: 'Resumo',\r\n    data() {\r\n      return {\r\n        vendas: []\r\n      };\r\n    },\r\n    methods: {\r\n      async carregarVendas() {\r\n        try {\r\n          const res = await fetch('http://localhost:3000/vendas');\r\n          const data = await res.json();\r\n          this.vendas = data;\r\n        } catch (error) {\r\n          alert('Erro ao carregar vendas: ' + error.message);\r\n        }\r\n      },\r\n      formatarNumero(valor) {\r\n        return Number(valor).toLocaleString('pt-BR', {\r\n          style: 'currency',\r\n          currency: 'BRL'\r\n        });\r\n        },\r\n        formatarDataHora(dataString) {\r\n  const data = new Date(dataString);\r\n  return data.toLocaleString('pt-BR', {\r\n    day: '2-digit',\r\n    month: '2-digit',\r\n    year: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n    second: '2-digit'\r\n  });\r\n  \r\n      },\r\n      async deletarVenda(id) {\r\n  try {\r\n    await fetch(`http://localhost:3000/deletarVenda/${id}`, {\r\n      method: 'DELETE',\r\n    });\r\n    alert('Venda deletada com sucesso!');\r\n    this.carregarVendas(); // Atualiza a lista\r\n  } catch (error) {\r\n    alert('Erro ao deletar venda: ' + error.message);\r\n  }\r\n}\r\n\r\n\r\n    },\r\n    mounted() {\r\n        this.carregarVendas();\r\n      this.formatarDataHora();\r\n      this.deletarVenda\r\n    }\r\n  };\r\n  </script>\r\n\r\n<style scoped>\r\n.container{\r\n    margin-top: 10%;\r\n}\r\nimg{\r\n    position: fixed;\r\n    top: 20%;\r\n    width: 500px;\r\n    height: 600px;\r\n}\r\n\r\ntable{\r\n    width:800px;\r\n    border:2px solid black;\r\n    background-color: aqua;\r\n    \r\n}\r\n\r\ntr,td,th{\r\n    border: 2px solid black;\r\n    padding-left: 10px;\r\n    text-align: center;\r\n}\r\n\r\ntd{\r\n    color: rgb(255, 255, 255);\r\n    font-weight: bold;\r\n    font-size: 1.5em;\r\n}\r\nth{\r\n\r\n    font-size: 2em;\r\n}\r\n\r\n</style>"],"mappings":"AAoCE,eAAe;EACbA,IAAI,EAAE,QAAQ;EACdC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,cAAcA,CAAA,EAAG;MACrB,IAAI;QACF,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QACvD,MAAML,IAAG,GAAI,MAAMI,GAAG,CAACE,IAAI,CAAC,CAAC;QAC7B,IAAI,CAACL,MAAK,GAAID,IAAI;MACpB,EAAE,OAAOO,KAAK,EAAE;QACdC,KAAK,CAAC,2BAA0B,GAAID,KAAK,CAACE,OAAO,CAAC;MACpD;IACF,CAAC;IACDC,cAAcA,CAACC,KAAK,EAAE;MACpB,OAAOC,MAAM,CAACD,KAAK,CAAC,CAACE,cAAc,CAAC,OAAO,EAAE;QAC3CC,KAAK,EAAE,UAAU;QACjBC,QAAQ,EAAE;MACZ,CAAC,CAAC;IACF,CAAC;IACDC,gBAAgBA,CAACC,UAAU,EAAE;MACnC,MAAMjB,IAAG,GAAI,IAAIkB,IAAI,CAACD,UAAU,CAAC;MACjC,OAAOjB,IAAI,CAACa,cAAc,CAAC,OAAO,EAAE;QAClCM,GAAG,EAAE,SAAS;QACdC,KAAK,EAAE,SAAS;QAChBC,IAAI,EAAE,SAAS;QACfC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE,SAAS;QACjBC,MAAM,EAAE;MACV,CAAC,CAAC;IAEE,CAAC;IACD,MAAMC,YAAYA,CAACC,EAAE,EAAE;MAC3B,IAAI;QACF,MAAMrB,KAAK,CAAC,sCAAsCqB,EAAE,EAAE,EAAE;UACtDC,MAAM,EAAE;QACV,CAAC,CAAC;QACFnB,KAAK,CAAC,6BAA6B,CAAC;QACpC,IAAI,CAACL,cAAc,CAAC,CAAC,EAAE;MACzB,EAAE,OAAOI,KAAK,EAAE;QACdC,KAAK,CAAC,yBAAwB,GAAID,KAAK,CAACE,OAAO,CAAC;MAClD;IACF;EAGI,CAAC;EACDmB,OAAOA,CAAA,EAAG;IACN,IAAI,CAACzB,cAAc,CAAC,CAAC;IACvB,IAAI,CAACa,gBAAgB,CAAC,CAAC;IACvB,IAAI,CAACS,YAAW;EAClB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}